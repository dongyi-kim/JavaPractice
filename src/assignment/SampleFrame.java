package assignment;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;

/**
 *
 * @author waps12b
 */
public class SampleFrame extends javax.swing.JFrame {

    // Variables declaration - do not modify
    private javax.swing.JButton btnClear;
    private InsertButton btnInsert;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSize;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton radioMyStack;
    private javax.swing.JRadioButton radioSampleQueue;
    private javax.swing.JRadioButton radioSampleHeap;
    // End of variables declaration


    /**
     * 두 스트링을 비교연산자 Comparator를 정의한다
     */
    private final Comparator<String> cmp = new Comparator<String>() {
        @Override
        public int compare(String o1, String o2) {
            return o1.compareTo(o2);
        }
    };

    private CustomCollection<String> collection = null;

    /**
     * 파라미터로 받은 텍스트를 로그 영역에 출력해줍니다
     * @param text
     */
    public void log(String text)
    {
        SimpleDateFormat sdf = new SimpleDateFormat("hhmmss");
        Date now = Calendar.getInstance().getTime();
        String output = String.format( "[%s] %s \n", sdf.format(now), text );
        jTextArea1.append( output );
    }


    /**
     * Creates new form CollectionFrame
     */
    public SampleFrame()
    {
        //GUI 생성 메소드
        initComponents();
        QUEST1();
        QUEST2();
        this.radioSampleQueue.setSelected(true);
    }



    private final void QUEST1()
    {
        /** [Quest 0]
         *  MyStack.java 클래스를 구현하시오
         *
         *  [Quest 1]
         *  radioSamepleQueue, radioSampleHeap, radioMyStack에 리스너를 추가하시오
         *  각 라디오 버튼이 선택되었을 때 해당 이름에 맞는 컬렉션을 new로 생성하여 collection 변수에 삽입한다
         *      [!] RadioButton 선택 이벤트 처리는 ActionListener 인터페이스를 사용한다
         *
         *  [Quest2]
         *  생성된 collection에 CustomCollection.OnFiveItemListener를 추가한다
         *  이를 통해 컬렉션 내의 아이템이 5개가 되면 로그에 "Five Item!!"을 출력하게 만든다
         */


    }


    private final void QUEST2()
    {
        /** [Quest 3]
         *  리스너를 사용하여 각 버튼이 클릭되었을 때 다음의 기능들을 동작하게 하시오
         *  btnRemove : collection의 remove()를 호출하여 하나의 아이템을 삭제하고, 이 아이템 정보를 log()로 출력한다.
         *    [!] 각 컬렉션 클래스 안에 remove()가 호출될 시 제거 할 아이템이 없으면 NoItemException을 throw하게한다
         *    [!] SampleFrame에서는 이를 catch하여 "No Item to remove"라는 log를 출력한
         *
         *  btnClear : collection의 clear()를 호출하여 모든 아이템을 삭제한다. 이를 알리는 메시지를 log()로 출력한다.
         *  btnSize : collection의 size()를 호출하여 현재 보관중인 아이템의 수를 얻어오고, 이를 log()로 출력한다.
         */



    }






    public class InsertButton extends JButton implements MouseListener
    {
        public InsertButton()
        {
            this.addMouseListener(this);
        }

        @Override
        public void mouseClicked(MouseEvent e)
        {
            String text = jTextField1.getText();
            if(text.length() == 0){
                log("Empty String was inserted!");
                return;
            }
            collection.insert(text);
            log(" String Inserted : \"" + text + "\" ");
        }

        @Override
        public void mousePressed(MouseEvent e) {

        }

        @Override
        public void mouseReleased(MouseEvent e) {

        }

        @Override
        public void mouseEntered(MouseEvent e) {

        }

        @Override
        public void mouseExited(MouseEvent e) {

        }

    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        radioSampleQueue = new javax.swing.JRadioButton();
        radioSampleHeap = new javax.swing.JRadioButton();
        radioMyStack = new javax.swing.JRadioButton();
        btnInsert = new InsertButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSize = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(radioSampleQueue);
        radioSampleQueue.setLabel("SampleQueue");
        radioSampleQueue.setName(""); // NOI18N

        buttonGroup1.add(radioSampleHeap);
        radioSampleHeap.setLabel("SampleHeap");

        buttonGroup1.add(radioMyStack);
        radioMyStack.setLabel("MyStack");

        btnInsert.setText("Insert");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        btnClear.setText("Clear");

        btnRemove.setText("Remove");

        btnSize.setText("Size");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(radioSampleHeap)
                                                                .addComponent(radioMyStack)
                                                                .addComponent(radioSampleQueue))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(btnRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(btnSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addContainerGap())))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnInsert)
                                        .addComponent(btnClear))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnRemove)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnSize)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(radioSampleQueue)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(radioSampleHeap)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(radioMyStack))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>
}
